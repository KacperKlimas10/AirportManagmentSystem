{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Szymon\\\\Downloads\\\\lotnisko_projekt-master\\\\frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // async function for login (commented the backend endpoint attempt for testing reasons)\n  const handleLogin = async () => {\n    try {\n      navigate(\"/dashboard\");\n      // const response = await fetch(\"/auth/login\", {\n      //     method: \"POST\",\n      //     headers: { \"Content-Type\": \"application/json\" },\n      //     body: JSON.stringify(credentials),\n      // });\n      //\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     localStorage.setItem(\"authToken\", data.token); // Save JWT (json web token)\n      //     navigate(\"/dashboard\");\n      // } else {\n      //     setError(\"Invalid username or password\");\n      // }\n    } catch (err) {\n      setError(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      classnName: \"left-pane\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-pane\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setCredentials({\n          ...credentials,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: e => setCredentials({\n          ...credentials,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"LQrp3DCLMovcbXUSsM+c1Ck8iIs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","username","password","error","setError","navigate","handleLogin","err","className","children","classnName","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Szymon/Downloads/lotnisko_projekt-master/frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n    const [credentials, setCredentials] = useState({ username: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // async function for login (commented the backend endpoint attempt for testing reasons)\r\n    const handleLogin = async () => {\r\n        try {\r\n            navigate(\"/dashboard\")\r\n            // const response = await fetch(\"/auth/login\", {\r\n            //     method: \"POST\",\r\n            //     headers: { \"Content-Type\": \"application/json\" },\r\n            //     body: JSON.stringify(credentials),\r\n            // });\r\n            //\r\n            // if (response.ok) {\r\n            //     const data = await response.json();\r\n            //     localStorage.setItem(\"authToken\", data.token); // Save JWT (json web token)\r\n            //     navigate(\"/dashboard\");\r\n            // } else {\r\n            //     setError(\"Invalid username or password\");\r\n            // }\r\n        } catch (err) {\r\n            setError(\"An error occurred. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div classnName=\"left-pane\"></div>\r\n            <div className=\"right-pane\"></div>\r\n            <div className=\"login-container-right\">\r\n                <h2>Login</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    onChange={(e) => setCredentials({...credentials, username: e.target.value})}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setCredentials({...credentials, password: e.target.value})}\r\n                />\r\n                <button onClick={handleLogin}>Login</button>\r\n                {error && <p style={{color: \"red\"}}>{error}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAG9B;EACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACAD,QAAQ,CAAC,YAAY,CAAC;MACtB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVH,QAAQ,CAAC,sCAAsC,CAAC;IACpD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBb,OAAA;MAAKc,UAAU,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClClB,OAAA;MAAKY,SAAS,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClClB,OAAA;MAAKY,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAClCb,OAAA;QAAAa,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdlB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAAC;UAAC,GAAGD,WAAW;UAAEE,QAAQ,EAAEiB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACFlB,OAAA;QACImB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAAC;UAAC,GAAGD,WAAW;UAAEG,QAAQ,EAAEgB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACFlB,OAAA;QAAQyB,OAAO,EAAEf,WAAY;QAAAG,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3CX,KAAK,iBAAIP,OAAA;QAAG0B,KAAK,EAAE;UAACC,KAAK,EAAE;QAAK,CAAE;QAAAd,QAAA,EAAEN;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CAjDQD,KAAK;EAAA,QAGOH,WAAW;AAAA;AAAA8B,EAAA,GAHvB3B,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}